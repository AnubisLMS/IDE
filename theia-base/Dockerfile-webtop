# https://docs.linuxserver.io/images/docker-webtop

# https://hub.docker.com/layers/linuxserver/webtop/ubuntu-xfce-01154bf8-ls75/images/sha256-533e2b2b3f63ae80fcf9a74c0c70453151bc85ee620644a4b79800e5972523d2?context=explore
ARG TAG_VERSION=01154bf8-ls75
ARG TAG=ubuntu-xfce-${TAG_VERSION}
ARG BASE_IMAGE=lscr.io/linuxserver/webtop
FROM $BASE_IMAGE:$TAG

ARG DIST=focal
ENV TZ=America/New_York \
    USER=anubis \
    CUSTOM_USER=anubis \
    PUID=1001 \
    GUID=1001 \
    KEYBOARD=en-us-qwerty \
    CUSTOM_PORT=5000 \
    DEBIAN_FRONTEND=noninteractive \
    DOCKER_HOST="tcp://localhost:2376" \
    DOCKER_TLS_CERTDIR="/certs" \
    DOCKER_TLS_VERIFY="1" \
    DOCKER_CERT_PATH="/certs/client"

# Webtop setup
RUN set -eux; \
  SCRIPT_LINE='<script>function ping(){if (document.hasFocus()){fetch("/ide/ping")}};document.addEventListener("focus",ping);setInterval(ping,60000)</script>'; \
  HEAD_LINE_NUMBER=$(grep -n '</head>' /gclient/rdp.ejs | cut -f1 -d:); \
  sed -i "${HEAD_LINE_NUMBER}i${SCRIPT_LINE}" /gclient/rdp.ejs; \
  apt-get update; \
  apt-get install git wget build-essential -y --no-install-recommends; \
  mkdir -p /home/anubis; \
  chown -R ${PUID}:${GUID} /home/anubis; \
  usermod -d /home/anubis abc; \
  groupmod -g ${GUID} abc; \
  cd /home/anubis; \
  sed -i 's/\/config/\/home\/anubis/g' $(find /defaults /etc/cont-init.d /etc/services.d -type f); \
  wget 'https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64' -O /tmp/code.deb; \
  apt-get install -y /tmp/code.deb; \
  rm -rf /tmp/*; \
  rm -rf /usr/share/doc; \
  rm -rf /var/lib/apt/lists/*; \
  rm -rf /defaults/*; \
  cd /etc/cont-init.d/; \
  rm -f 90-custom-folders 99-custom-scripts 30-config; \
  sed -i 's/sudo:x:27:anubis/sudo:x:27:/' /etc/group; \
  rm /usr/share/applications/code.desktop; \
  set +eu; \
  find /etc -type f -exec 'sed' '-i' 's/abc/anubis/g' '{}' ';';

ARG PY_VERSION=3.13.7
ENV PY_VERSION=$PY_VERSION \
    NODE_VERSION=$NODE_VERSION \
    TERM=xterm-256color \
    DEBIAN_FRONTEND=noninteractive \
    REPO_NAME="" \
    ANUBIS_ASSIGNMENT_TESTS_REPO="" \
    ANUBIS_ADMIN="OFF" \
    ANUBIS=1 \
    ANUBIS_IDE=1 \
    ANUBIS_ASSIGNMENT_NAME="" \
    ANUBIS_WEBTOP=OFF \
    HOME=/home/anubis \
    SHELL=/usr/bin/zsh \
    THEIA_DEFAULT_PLUGINS="local-dir:/opt/theia/plugins/" \
    LANG="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8"

RUN set -eux; \
  apt-get update; \
  apt-get upgrade -y; \
  apt-get install -y --no-install-recommends \
  wget gpg gnupg apt-transport-https ca-certificates  \
  apt-utils pkg-config curl lsb-release; \
  \
  `# Add LLVM to apt`  \
  wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -; \
  echo "deb http://apt.llvm.org/${DIST}/ llvm-toolchain-${DIST} main" \
    > /etc/apt/sources.list.d/llvm.list; \
  \
  `# Add Docker to apt`  \
  mkdir -p /etc/apt/keyrings; \
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg; \
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
      $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null; \
  \
  `# ctop.sh`  \
  wget https://github.com/bcicen/ctop/releases/download/v0.7.7/ctop-0.7.7-linux-amd64 -O /usr/local/bin/ctop; \
  chmod +x /usr/local/bin/ctop; \
  \
  apt-get update; \
  apt-get install -y --no-install-recommends \
    git curl wget build-essential tree clangd zsh locales unzip \
    libffi-dev libexpat1-dev \
    libgdbm-dev liblzma-dev zlib1g-dev \
    libsqlite3-dev libssl-dev openssl \
    libsecret-1-0 sqlite3 libbz2-dev bzip2 fzf tk tk-dev \
    nano htop less mariadb-client openssh-client pigz procps \
    docker-ce-cli docker-compose-plugin libncurses6 libncurses-dev vim; \
  apt-get remove -y python python-pip python3-pip python3; \
  cd /; \
  \
  `# Locale`  \
  echo 'LANG=en_US.UTF-8' > /etc/locale.conf; \
  echo 'en_US.UTF-8 UTF-8' > /etc/locale.gen; \
  echo 'LANG=en_US.UTF-8' > /etc/default/locale; \
  locale-gen en_US.UTF-8; \
  \
  `# Python from source`  \
  wget https://www.python.org/ftp/python/$PY_VERSION/Python-$PY_VERSION.tgz; \
  wget https://bootstrap.pypa.io/get-pip.py; \
  tar xvf Python-$PY_VERSION.tgz; \
  cd Python-$PY_VERSION; \
  ./configure \
    --enable-loadable-sqlite-extensions \
    --enable-optimizations \
    --enable-option-checking=fatal \
    --enable-shared \
    --with-system-expat \
    --with-system-ffi \
    --without-ensurepip; \
  make -j $(nproc) LDFLAGS="-Wl,--strip-all"; \
  make install; \
  ldconfig; \
  ln -sf /usr/local/bin/python3 /usr/local/bin/python; \
  ln -sf /usr/local/bin/python3 /usr/bin/python3; \
  ln -sf /usr/local/bin/python3 /usr/bin/python; \
  cd ..; \
  rm -rf Python-$PY_VERSION; \
  rm Python-$PY_VERSION.tgz; \
  python3 get-pip.py \
    --disable-pip-version-check \
    --no-cache-dir; \
  rm get-pip.py; \
  pip3 install --upgrade --no-cache-dir pip; \
  pip3 install --upgrade --no-cache-dir python-language-server supervisor setuptools; \
  pip3 install --upgrade --no-cache-dir pyyaml requests gitpython parse lorem; \
  \
  `# Users, permissions, etc` \
  cd /home/anubis; \
  cp /etc/skel/.bash_logout /etc/skel/.bashrc /etc/skel/.profile /home/anubis/; \
  echo 'cat /etc/motd' >> /etc/skel/.bashrc; \
  cd /home/anubis; \
  chmod g+rw /home; \
  chown -R ${USER}:${USER} /home/anubis; \
  \
  `# Cleanup`  \
  apt remove -y libffi-dev libexpat1-dev \
    libgdbm-dev liblzma-dev zlib1g-dev; \
  apt autoclean -y; \
  apt autoremove -y; \
  rm -rf /tmp/*; \
  rm -rf /usr/share/doc; \
  rm -rf /var/cache/apt/*; \
  rm -rf /var/lib/apt/lists/*; \
  rm -rf /home/node/*; \
  find / -depth \
    \( -name .cache -o -name __pycache__ -o -name '*.pyc' -o -name .git -o -name .github \) \
    -exec 'rm' '-rf' '{}' '+';

# Exa
ARG EXA_VERSION=0.10.1
RUN set -eux; \
  cd /tmp; mkdir exa; \
  wget https://github.com/ogham/exa/releases/download/v${EXA_VERSION}/exa-linux-x86_64-v${EXA_VERSION}.zip; \
  unzip -d /tmp/exa exa-linux-x86_64-v${EXA_VERSION}.zip; \
  cd exa; \
  cp bin/exa /usr/local/bin/; \
  cp completions/exa.zsh /usr/local/share/zsh/site-functions/; \
  cd /; \
  rm -rf /tmp/*; \
  rm -rf /usr/share/doc; \
  rm -rf /var/cache/apt/*; \
  rm -rf /var/lib/apt/lists/*; \
  rm -rf /home/node/*;

# PRETTY SHELL NECESSARY
RUN set -eux; \
  mkdir -p /etc/anubis/skel/; \
  mkdir -p /etc/anubis/init.d/; \
  chsh -s /usr/bin/zsh ${USER}; \
  git clone https://github.com/robbyrussell/oh-my-zsh.git /opt/oh-my-zsh; \
  git clone https://github.com/Aloxaf/fzf-tab.git /opt/oh-my-zsh/custom/plugins/fzf-tab; \
  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git /opt/oh-my-zsh/custom/plugins/zsh-syntax-highlighting; \
  git clone https://github.com/zsh-users/zsh-autosuggestions.git /opt/oh-my-zsh/custom/plugins/zsh-autosuggestions;
COPY zshrc /etc/anubis/skel/.zshrc
COPY anubis.zsh-theme /opt/oh-my-zsh/custom/themes/anubis.zsh-theme

# Anubis CLI
RUN set -eux; \
  git clone https://github.com/AnubisLMS/AnubisCLI.git /cli; \
  pip3 install --no-cache-dir /cli; \
  rm -rf /cli;

# Force docker environment
RUN set -eux; \
    echo 'export DOCKER_HOST="tcp://localhost:2376"' >> /etc/anubis/skel/.xsessionrc; \
    echo 'export DOCKER_TLS_CERTDIR="/certs"' >> /etc/anubis/skel/.xsessionrc; \
    echo 'export DOCKER_TLS_VERIFY="1"' >> /etc/anubis/skel/.xsessionrc; \
    echo 'export DOCKER_CERT_PATH="/certs/client"' >> /etc/anubis/skel/.xsessionrc

COPY 30-config /etc/cont-init.d/30-config
COPY code.desktop /usr/share/applications/code.desktop
COPY motd.txt /etc/motd
COPY initialize-ide.py /etc/cont-init.d/00-initialize-ide.py
